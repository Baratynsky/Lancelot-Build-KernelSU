name: Build Kernel

on:
  push:
    branches:
      - main  # Замените на вашу основную ветку
  pull_request:
    branches:
      - main  # Замените на вашу основную ветку

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget curl unzip

      - name: Download ZyC Clang
        run: |
          mkdir -p ~/clang
          wget https://github.com/zydcy/clang/releases/download/21.0.0git/clang-21.0.0git-linux-aarch64.tar.gz
          tar -xzf clang-21.0.0git-linux-aarch64.tar.gz -C ~/clang --strip-components=1
          echo "export PATH=\$PATH:~/clang/bin" >> $GITHUB_ENV

      - name: Clone Kernel Source
        run: |
          git clone --depth=1 -b kernel-tree https://github.com/Jbub5/android_kernel_xiaomi_mt6768.git kernel
          cd kernel
          git checkout lancelot_defconfig

      - name: Configure Kernel
        run: |
          cd kernel
          make ARCH=arm64 O=out lancelot_defconfig

      - name: Build Kernel
        run: |
          cd kernel
          make -j$(nproc) ARCH=arm64 O=out CC=clang

      - name: Clone AnyKernel3
        run: |
          git clone --depth=1 -b proton https://github.com/Jbub5/AnyKernel3.git anykernel

      - name: Copy Kernel to AnyKernel
        run: |
          cp kernel/out/arch/arm64/boot/Image.gz anykernel
          cp kernel/out/arch/arm64/boot/dts/**/*.dtb anykernel
          cp kernel/out/arch/arm64/boot/dts/**/*.img anykernel

      - name: Create ZIP
        run: |
          cd anykernel
          zip -r ../kernel.zip .

      - name: Upload Kernel ZIP
        uses: actions/upload-artifact@v2
        with:
          name: kernel
          path: kernel.zip
